{
  "itemGroup.extra_gauges": "Create: Extra Gauges",

  "item.extra_gauges.logic_gauge": "Логический фабричный датчик",
  "item.extra_gauges.integer_gauge": "Целочисленный фабричный датчик",
  "item.extra_gauges.comparator_gauge": "Компараторный фабричный датчик",
  "item.extra_gauges.counter_gauge": "Счётный фабричный датчик",
  "item.extra_gauges.passive_gauge": "Пассивный фабричный датчик",
  "item.extra_gauges.string_gauge": "Строковый фабричный датчик",
  "block.extra_gauges.integer_selector": "Целочисленный селектор",
  "block.extra_gauges.display_collector": "Коллектор отображения",

  "extra_gauges.panel.panels_connected": "%s теперь указывает на %s",
  "extra_gauges.panel.custom_panel_on_restocker": "Нельзя установить пользовательский фабричный датчик в режиме пополнения",

  "create.logistics.logic_gate": "Логический вентиль",
  "logic_gauge.gate.or": "ИЛИ (OR; активируется, если любой вход активен)",
  "logic_gauge.gate.and": "И (AND; активируется, если все входы активны)",
  "logic_gauge.gate.nor": "НЕ ИЛИ (NOR; активируется, если все входы неактивны)",
  "logic_gauge.gate.nand": "НЕ И (NAND; активируется, если любой вход неактивен)",
  "logic_gauge.gate.xor": "Исключающее ИЛИ (XOR; активируется при нечётном количестве активных входов)",
  "logic_gauge.gate.xnor": "Исключающее ИЛИ с инверсией (XNOR; активируется при чётном количестве активных входов)",

  "create.logistics.int_operation": "Целочисленная операция",
  "integer_gauge.mode.add": "Сложение (суммирует все входы)",
  "integer_gauge.mode.subtract": "Вычитание (суммирует все входы, но даёт отрицательный результат)",
  "integer_gauge.mode.multiply": "Умножение (перемножает все входы)",

  "create.logistics.comparator_value": "Выберите сравниваемую константу",
  "comparator_gauge.mode.equals": "Вход равен константе",
  "comparator_gauge.mode.different": "Вход отличается от константы",
  "comparator_gauge.mode.greater": "Вход больше константы",
  "comparator_gauge.mode.greater_equals": "Вход больше или равен константе",
  "comparator_gauge.mode.less": "Вход меньше константы",
  "comparator_gauge.mode.less_equals": "Вход меньше или равен константе",
  "create.logistics.comparator_gauge.title": "Входы будут просуммированы",

  "create.logistics.counter_threshold": "Выберите пороговое значение",

  "create.display_collector.set": "Позиция источника выбрана",
  "create.display_collector.success": "Успешно привязано к позиции источника",

  "extra_gauges.ponder.logic_gauge.header": "Использованием логических фабричных датчиков для передачи редстоун-сигналов",
  "extra_gauges.ponder.logic_gauge.text_1": "Логические датчики могут передавать редстоун через несколько объектов, прикреплённых к стене",
  "extra_gauges.ponder.logic_gauge.text_2": "В качестве входов можно использовать §9рычаги§r, §9аналоговые §9рычаги§r, §9редстоуновые передатчики §9в §9режиме §9приёма§r и §6другие §6 фабричные датчики",
  "extra_gauges.ponder.logic_gauge.text_3": "В качестве выходов — §9редстоуновые передатчики §9в §9режиме §9передачи§r и §6другие §6фабричные датчики",
  "extra_gauges.ponder.logic_gauge.text_4": "§eПримечание: §rрычаги и аналоговые рычаги §cне §cотправляют §cобновление §cмгновенно§r, в отличие от редстоуновых передатчиков",
  "extra_gauges.ponder.logic_gauge.text_5": "Слишком просто? Посмотрим, что произойдёт при §6дополнительных §6входах",
  "extra_gauges.ponder.logic_gauge.text_6": "Фабричный датчик, который по умолчанию находится в режиме §6ИЛИ§r, активируется когда один ИЛИ другой рычаг включён",
  "extra_gauges.ponder.logic_gauge.text_7": "Удерживая ПКМ, можно изменить тип вентиля, например на §6И",
  "extra_gauges.ponder.logic_gauge.text_8": "Теперь в режиме §6И§r фабричный датчик активируется только когда оба рычага включены",
  "extra_gauges.ponder.logic_gauge.text_9": "Наконец, с помощью передатчика информации можно показать миру текущее значение логического фабричного датчика!",
  "extra_gauges.ponder.logic_gauge_storage.header": "Взаимодействием логических фабричных датчиков с фабричными",
  "extra_gauges.ponder.logic_gauge_storage.text_1": "Логические датчики предназначены для взаимодействия с другими датчиками",
  "extra_gauges.ponder.logic_gauge_storage.text_2": "Когда достигнут порог фабричного датчика (§9у нас §964/64 §9алмазов§r)...",
  "extra_gauges.ponder.logic_gauge_storage.text_3": "...логический датчик получит §cредстоун-сигнал§r!",
  "extra_gauges.ponder.logic_gauge_storage.text_4": "С другой стороны, логический датчик может указывать на фабричный, §cблокируя §cего §rот создания!",

  "extra_gauges.ponder.integer_gauge.header": "Использованием целочисленных фабричных датчиков для передачи чисел",
  "extra_gauges.ponder.integer_gauge.text_1": "Целочисленные датчики могут передавать числа через объекты, прикреплённые к стене",
  "extra_gauges.ponder.integer_gauge.text_2": "§9Рычаги §rи §9редстоуновые передатчики сигналов §rвыдают 15 при активации...",
  "extra_gauges.ponder.integer_gauge.text_3": "...§9аналоговые §9рычаги §rвыдают сигнал между 0 и 15 в зависимости от положения...",
  "extra_gauges.ponder.integer_gauge.text_4": "...а §9целочисленные §9селекторы §rпозволяют вводить гораздо большие числа",
  "extra_gauges.ponder.integer_gauge.text_5": "§eПримечание: §rрычаги §cне §cотправляют §cобновление §cмгновенно§r, в отличие от редстоуновых передатчиков и §9целочисленных §9селекторов",
  "extra_gauges.ponder.integer_gauge.text_6": "Посмотрим, что произойдёт при подключении двух целочисленных фабричных датчиков...",
  "extra_gauges.ponder.integer_gauge.text_7": "Датчик, имеющий §92 §9входа§r, будет выводить §6сумму§r этих значений. (Больше не 15+7)",
  "extra_gauges.ponder.integer_gauge.text_8": "Удерживая ПКМ, можно изменить операцию на §6вычитание §rили §6умножение§r",
  "extra_gauges.ponder.integer_gauge_storage.header": "Взаимодействием целочисленных фабричных датчиков с фабричными",
  "extra_gauges.ponder.integer_gauge_storage.text_1": "Целочисленные датчики предназначены для взаимодействия с другими датчиками",
  "extra_gauges.ponder.integer_gauge_storage.text_2": "Когда уровень хранения предмета изменяется...",
  "extra_gauges.ponder.integer_gauge_storage.text_3": "...целочисленный датчик считывает это значение!",
  "extra_gauges.ponder.integer_gauge_storage.text_4": "С другой стороны, целочисленный датчик может задавать §aцелевое §aколичество§r для фабричного датчика",

  "extra_gauges.ponder.passive_gauge.header": "Использованием пассивных фабричных датчиков для оптимизации автоматических рецептов",
  "extra_gauges.ponder.passive_gauge.text_1": "Пассивные датчики работают так же, как §9фабричныеr...",
  "extra_gauges.ponder.passive_gauge.text_2": "...но вам не нужно задавать §9количество §rпредметов для создания",
  "extra_gauges.ponder.passive_gauge.text_3": "Когда палок не хватает...",
  "extra_gauges.ponder.passive_gauge.text_4": "...пассивный датчик будет поддерживать в хранилище §9точное §9количество§r",
  "extra_gauges.ponder.passive_gauge.text_5": "Как только начнётся создание первого рецепта, пассивный датчик автоматически §cостанавливается§r",

  "extra_gauges.ponder.comparator_gauge.header": "Использованием компараторных фабричных датчиков для преобразования чисел в логические значения",
  "extra_gauges.ponder.comparator_gauge.text_1": "Компараторные датчики служат мостом между §9числами §rи §cредстоуном §r(§cвкл/выкл§r)",
  "extra_gauges.ponder.comparator_gauge.text_2": "Удерживая ПКМ, можно задать константное число...",
  "extra_gauges.ponder.comparator_gauge.text_3": "...а затем это число §9сравнивается §rс §9входами §rс помощью §9оператора §r(в этом примере §6>§r)",
  "extra_gauges.ponder.comparator_gauge.text_4": "Если ввести §66§r, а константа равна §98§r, то 6 не больше 8, поэтому результат §cложь§r",
  "extra_gauges.ponder.comparator_gauge.text_5": "Однако если изменить на §610§r, условие выполняется, и §cредстоуновый передатчик §rактивируется",

  "extra_gauges.ponder.counter_gauge.header": "Использованием счётных фабричных датчиков для подсчёта редстоун-импульсов",
  "extra_gauges.ponder.counter_gauge.text_1": "Редстоуновый передатчик должен быть настроен так для §cмгновенного §cобновления §cпри §cнажатии§r",
  "extra_gauges.ponder.counter_gauge.text_2": "Счётные датчики подсчитывают редстоун-импульсы, так как вы не можете",
  "extra_gauges.ponder.counter_gauge.text_3": "Количество импульсов хранится как §9число§r",
  "extra_gauges.ponder.counter_gauge.text_4": "Удерживая ПКМ, можно изменить §9порог §9счётчика§r",
  "extra_gauges.ponder.counter_gauge.text_5": "Как только порог будет достигнут (в этом примере он равен 3), счётный датчик выдаст §cредстоун-сигнал§r",
  "extra_gauges.ponder.counter_gauge.text_6": "Следующее срабатывание сбросит счётчик в 0",

  "extra_gauges.ponder.string_gauge.header": "Использованием строковых фабричных датчиков для обработки текстовых значений",
  "extra_gauges.ponder.string_gauge.text_1": "Строковые датчики могут передавать §9текст §rчерез объекты, прикреплённые к стене",
  "extra_gauges.ponder.string_gauge.text_2": "§bПривет!",
  "extra_gauges.ponder.string_gauge.text_3": "При наличии нескольких входов они будут §9объединены в один текст",
  "extra_gauges.ponder.string_gauge.text_4": "§eПримечание: §rпорядок входов не гарантируется",
  "extra_gauges.ponder.string_gauge.text_5": "ПКМ открывает §9экран §9настроек",
  "extra_gauges.ponder.string_gauge.text_6": "После изменения §eтекста §eобъединения §rна §9\",\"§r вывод изменится",
  "extra_gauges.ponder.string_gauge.text_7": "Текст также может обрабатываться с помощью двух других текстовых полей",
  "extra_gauges.ponder.string_gauge.text_8": "Датчик будет искать §cсоответствия с регулярным выражением§r...",
  "extra_gauges.ponder.string_gauge.text_9": "...и заменять их на §aтекст §aзамены§r",
  "extra_gauges.ponder.string_gauge.text_10": "§cДом §r—> §aБаза",
  "extra_gauges.ponder.string_gauge_storage.header": "Взаимодействием строковых фабричных датчиков с другими",
  "extra_gauges.ponder.string_gauge_storage.text_1": "Строковые датчики предназначены для взаимодействия с другими датчиками",
  "extra_gauges.ponder.string_gauge_storage.text_2": "Они могут считывать название и количество предмета с фабричного датчика...",
  "extra_gauges.ponder.string_gauge_storage.text_3": "...и записывать его значение в адрес другого датчика!",
  "extra_gauges.ponder.string_gauge_storage.text_4": "Но есть и больше возможностей: при указании на §9целочисленный §9датчик §rили §cлогический §cдатчик§r...",
  "extra_gauges.ponder.string_gauge_storage.text_5": "...если значение является числом (например, §9\"12\"§r)...",
  "extra_gauges.ponder.string_gauge_storage.text_6": "...оно автоматически конвертируется для §cредстоун §rи §9целочисленного§r датчика!",
  "extra_gauges.ponder.display_collector.header": "Использованием сборщика отображения для получения источников отображения",
  "extra_gauges.ponder.display_collector.text_1": "Сборщики отображения могут отправлять информацию в строковые датчики",
  "extra_gauges.ponder.display_collector.text_2": "Сначала кликните ПКМ по источнику...",
  "extra_gauges.ponder.display_collector.text_3": "...затем установите на доску...",
  "extra_gauges.ponder.display_collector.text_4": "...и соедините со строковым датчиком",
  "extra_gauges.ponder.display_collector.text_5": "Откройте меню для запуска обновления",

  "extra_gauges.ponder.expanded_factory_recipes.header": "Созданием предметов на крупных механических сборщиках",
  "extra_gauges.ponder.expanded_factory_recipes.text_1": "§9Дополнительные §9датчики §rтеперь поддерживают создание крупных рецептов с помощью фабричных датчиков",
  "extra_gauges.ponder.expanded_factory_recipes.text_2": "Для этого требуются крупные установки механических сборщиков",
  "extra_gauges.ponder.expanded_factory_recipes.text_3": "Но мелкие рецепты также могут использоваться на крупных установках, увеличив ширину на §eпанели управления§r",
  "extra_gauges.ponder.expanded_factory_recipes.text_4": "Не беспокойтесь о высоте вашей установки — главное, чтобы она соответствовала минимальной высоте рецепта!",

  "create.logistics.int_selection": "Выберите целое значение",
  "extra_gauges.gui.factory_panel.crafting_input_tip_1": "механические сборщики (%s блоков в ширину)",
  "extra_gauges.gui.factory_panel.crafting_input_tip_2": "Минимальная высота: %s блоков",
  "extra_gauges.gui.factory_panel.auto_crafting_input": "Рецепт слишком велик для отображения",
  "extra_gauges.gui.factory_panel.extend_width": "Увеличить ширину (%s)",
  "extra_gauges.gui.factory_panel.reduce_width": "Уменьшить ширину (%s)",
  "extra_gauges.gui.passive_panel.no_recipe": "Рецепт отсутствует",

  "extra_gauges.gui.string_panel.join": "Объединение:",
  "extra_gauges.gui.string_panel.regex": "Регулярное выражение:",
  "extra_gauges.gui.string_panel.replacement": "Замена:"
}
