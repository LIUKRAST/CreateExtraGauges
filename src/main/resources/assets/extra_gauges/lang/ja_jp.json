{
  "itemGroup.extra_gauges": "Create: Extra Gauges",

  "item.extra_gauges.logic_gauge": "ロジックゲージ",
  "item.extra_gauges.integer_gauge": "整数ゲージ",
  "item.extra_gauges.comparator_gauge": "コンパレーターゲージ",
  "item.extra_gauges.counter_gauge": "カウンターゲージ",
  "item.extra_gauges.passive_gauge": "パッシブゲージ",
  "item.extra_gauges.string_gauge": "文字列ゲージ",
  "block.extra_gauges.integer_selector": "整数セレクター",
  "block.extra_gauges.display_collector": "ディスプレイコレクター",

  "extra_gauges.panel.panels_connected": "%sは%sに接続されました",
  "extra_gauges.panel.custom_panel_on_restocker": "補充モードではカスタムゲージを配置できません",

  "create.logistics.logic_gate": "ロジックゲージ",
  "logic_gauge.gate.or": "OR (いずれかの入力が有効なら作動)",
  "logic_gauge.gate.and": "AND (全ての入力が有効なら作動)",
  "logic_gauge.gate.nor": "NOR (いずれかの入力が無効なら作動)",
  "logic_gauge.gate.nand": "NAND (全ての入力が無効なら作動)",
  "logic_gauge.gate.xor": "XOR (有効な入力が奇数なら作動)",
  "logic_gauge.gate.xnor": "XNOR (有効な入力が偶数なら作動)",

  "create.logistics.int_operation": "整数演算",
  "integer_gauge.mode.add": "加算 (全ての入力を合計)",
  "integer_gauge.mode.subtract": "減算 (全ての入力を合計し、負の値を返す)",
  "integer_gauge.mode.multiply": "乗算 (全てのを掛け算)",

  "create.logistics.comparator_value": "比較値を選択",
  "comparator_gauge.mode.equals": "入力値が比較値と等しい",
  "comparator_gauge.mode.different": "入力値が比較値と異なる",
  "comparator_gauge.mode.greater": "入力値が比較値より大きい",
  "comparator_gauge.mode.greater_equals": "入力値が比較値以上",
  "comparator_gauge.mode.less": "入力値が比較値より小さい",
  "comparator_gauge.mode.less_equals": "入力値が比較値以下",
  "create.logistics.comparator_gauge.title": "入力は合計されます",

  "create.logistics.counter_threshold": "しきい値を選択",

  "create.display_collector.set": "対象の位置を選択しました",
  "create.display_collector.success": "対象の位置と結び付けられました",

  "extra_gauges.ponder.logic_gauge.header": "ロジックゲージを使ったレッドストーン信号の読み取り",
  "extra_gauges.ponder.logic_gauge.text_1": "ロジックゲージはパネル要素からレッドストーン信号を読み取れます...",
  "extra_gauges.ponder.logic_gauge.text_2": "そして他のパネル要素に伝達します",
  "extra_gauges.ponder.logic_gauge.text_3": "要素間の接続は、ゲージを右クリックして画面の＋ボタンから作成できます",
  "extra_gauges.ponder.logic_gauge.text_4": "論理演算子 (OR, AND, NOR, NAND, XOR, XNOR) は右クリック長押しで変更できます",
  "extra_gauges.ponder.logic_gauge.text_5": "例えば、ロジックゲージがANDモードの場合、全ての入力が有効な時のみレッドストーン信号を出力します",
  "extra_gauges.ponder.logic_gauge.text_6": "ゲージはデフォルトで§6OR§rモードになっており、いずれかのレバーがオンなら作動します",
  "extra_gauges.ponder.logic_gauge.text_7": "右クリック長押しで他の論理式\n(例: §6AND§r)に変更できます",
  "extra_gauges.ponder.logic_gauge.text_8": "ゲージが§6AND§rモードの場合、全てのレバーがオンの時のみ作動します",
  "extra_gauges.ponder.logic_gauge.text_9": "最後に、ディスプレイリンクを使えば、現在のロジックゲージの値を表示できます",
  "extra_gauges.ponder.logic_gauge_storage.header": "ロジックゲージとファクトリーゲージの連携",
  "extra_gauges.ponder.logic_gauge_storage.text_1": "ロジックゲージは他のゲージと連携することができます",
  "extra_gauges.ponder.logic_gauge_storage.text_2": "ファクトリーゲージが目標値に達すると (§9ダイヤ §964/64 §9個§r)...",
  "extra_gauges.ponder.logic_gauge_storage.text_3": "...ロジックゲージが§cレッドストーン信号§rを受け取ります!",
  "extra_gauges.ponder.logic_gauge_storage.text_4": "逆に、ロジックゲージがファクトリーゲージを指すことで、 §cクラフトをブロック§rすることができます!",

  "extra_gauges.ponder.integer_gauge.header": "整数ゲージを使用した数値の伝達",
  "extra_gauges.ponder.integer_gauge.text_1": "整数ゲージは壁に設置した複数の要素間で数値を伝達できます",
  "extra_gauges.ponder.integer_gauge.text_2": "§9レバー§rや§9レッドストーンリンク§rはオンの時、15を出力します...",
  "extra_gauges.ponder.integer_gauge.text_3": "...§9アナログレバー§rは状態に応じて0～15の信号を出力します...",
  "extra_gauges.ponder.integer_gauge.text_4": "...そして§9整数セレクター§rはさらに多くの数値を選択して出力できます",
  "extra_gauges.ponder.integer_gauge.text_5": "§e注意: §rレバーやアナログレバーは§c即座に更新されない§rが、レッドストーンリンクや§9整数セレクター§rは即座に更新されます",
  "extra_gauges.ponder.integer_gauge.text_6": "2つの整数ゲージを接続するとどうなるか見てみましょう...",
  "extra_gauges.ponder.integer_gauge.text_7": "ゲージは§92つの入力§rを持ち、これらの§6合計§rを出力します",
  "extra_gauges.ponder.integer_gauge.text_8": "右クリック長押しで、このゲージの演算を §6減算§rや§6乗算§rに変更できます",
  "extra_gauges.ponder.integer_gauge_storage.header": "整数ゲージとファクトリーゲージの連携",
  "extra_gauges.ponder.integer_gauge_storage.text_1": "整数ゲージは他のゲージと連携できます",
  "extra_gauges.ponder.integer_gauge_storage.text_2": "アイテムの保管量が変化すると...",
  "extra_gauges.ponder.integer_gauge_storage.text_3": "...整数ゲージは、それを読み取ります",
  "extra_gauges.ponder.integer_gauge_storage.text_4": "また、整数ゲージでファクトリーゲージの§a目標量§rを設定することもできます",

  "extra_gauges.ponder.passive_gauge.header": "パッシブゲージを使用した自動レシピの最適化",
  "extra_gauges.ponder.passive_gauge.text_1": "パッシブゲージは§9ファクトリーゲージ§rと同じように動作します...",
  "extra_gauges.ponder.passive_gauge.text_2": "...ただし、生産するアイテムの§9目標量§rを設定する必要はありません",
  "extra_gauges.ponder.passive_gauge.text_3": "棒が不足すると...",
  "extra_gauges.ponder.passive_gauge.text_4": "...パッシブゲージが保管に§9ちょうどいい数§rを維持しようとします",
  "extra_gauges.ponder.passive_gauge.text_5": "最初のレシピがクラフトを開始すると、パッシブゲージは自動的に§c停止§rします",

  "extra_gauges.ponder.comparator_gauge.header": "コンパレーターゲージで数値を真偽値に変換",
  "extra_gauges.ponder.comparator_gauge.text_1": "コンパレーターゲージは§9数値§rと §cレッドストーン信号§r(§cオン/オフ§r)を変換することができます",
  "extra_gauges.ponder.comparator_gauge.text_2": "右クリック長押しで定数値を設定できます...",
  "extra_gauges.ponder.comparator_gauge.text_3": "...その数値と§9入力値§rが§9演算子§r (この例では §6>§r)で§9比較§rされます",
  "extra_gauges.ponder.comparator_gauge.text_4": "入力が§66§rで定数が§98§rなら、6は8より大きくないので、§cfalse§rを返します",
  "extra_gauges.ponder.comparator_gauge.text_5": "ただし、§610§rに変更すれば §cレッドストーンリンク§rが動作します",

  "extra_gauges.ponder.counter_gauge.header": "カウンターゲージを使ったレッドストーン信号の入力数の記録",
  "extra_gauges.ponder.counter_gauge.text_1": "このようなレッドストーン構成で\n§cクリック時に即座に更新§rされます",
  "extra_gauges.ponder.counter_gauge.text_2": "カウンターゲージはレッドストーン信号の入力数を数えます",
  "extra_gauges.ponder.counter_gauge.text_3": "記録した数は§9数値§rとして保存されます",
  "extra_gauges.ponder.counter_gauge.text_4": "右クリック長押しで§9カウンターのしきい値§rを変更できます",
  "extra_gauges.ponder.counter_gauge.text_5": "しきい値に達すると（この例では3）、カウンターは§cレッドストーン信号§rを出力します",
  "extra_gauges.ponder.counter_gauge.text_6": "もう一度カウンターを作動させると、値は0にリセットされます",

  "extra_gauges.ponder.string_gauge.header": "文字列ゲージによるテキストの変更",
  "extra_gauges.ponder.string_gauge.text_1": "文字列ゲージは壁に設置した複数の要素間で§9テキスト§rを伝達できます",
  "extra_gauges.ponder.string_gauge.text_2": "§bHello!",
  "extra_gauges.ponder.string_gauge.text_3": "複数の入力がある場合、すべてのテキストが§9一つに結合§rされます",
  "extra_gauges.ponder.string_gauge.text_4": "§e注意: §r入力の順序は保証されません",
  "extra_gauges.ponder.string_gauge.text_5": "右クリックで§9設定画面§rを開けます",
  "extra_gauges.ponder.string_gauge.text_6": "§e結合テキスト§rを§9\",\"§rに変更すると出力も変わります",
  "extra_gauges.ponder.string_gauge.text_7": "設定画面の他のテキストボックスでもテキストを加工できます",
  "extra_gauges.ponder.string_gauge.text_8": "ゲージは§c正規表現に一致するテキスト§rを検索します...",
  "extra_gauges.ponder.string_gauge.text_9": "...そして§a置換入力§rで置き換えます",
  "extra_gauges.ponder.string_gauge.text_10": "§cHouse §r-> §aBase",
  "extra_gauges.ponder.string_gauge_storage.header": "文字列ゲージと他のゲージの連携",
  "extra_gauges.ponder.string_gauge_storage.text_1": "文字列ゲージは他のゲージと連携できます",
  "extra_gauges.ponder.string_gauge_storage.text_2": "ファクトリーゲージからアイテム名や数を読み取れます...",
  "extra_gauges.ponder.string_gauge_storage.text_3": "...そしてその値を他のゲージに使用することができます",
  "extra_gauges.ponder.string_gauge_storage.text_4": "さらに、§9整数ゲージ§rや§cロジックゲージ§rを指す場合...",
  "extra_gauges.ponder.string_gauge_storage.text_5": "...値が数字(例: §9\"12\"§r)なら...",
  "extra_gauges.ponder.string_gauge_storage.text_6": "...自動的に§cレッドストーン信号§rや§9整数§rに変換されます!",
  "extra_gauges.ponder.display_collector.header": "ディスプレイコレクターで表示元を取得",
  "extra_gauges.ponder.display_collector.text_1": "ディスプレイコレクターは変化する情報を文字列ゲージに送信できます",
  "extra_gauges.ponder.display_collector.text_2": "まず、情報を読み出すブロックを右クリックします...",
  "extra_gauges.ponder.display_collector.text_3": "...次にボードに取り付けます...",
  "extra_gauges.ponder.display_collector.text_4": "...最後に文字列ゲージと接続します",
  "extra_gauges.ponder.display_collector.text_5": "UIを開いてを設定・更新すると、表示することができます",

  "extra_gauges.ponder.expanded_factory_recipes.header": "大型自動クラフターでアイテムをクラフト",
  "extra_gauges.ponder.expanded_factory_recipes.text_1": "§9Extra §9gauges§r は大型レシピのファクトリーゲージによるクラフトに対応しました",
  "extra_gauges.ponder.expanded_factory_recipes.text_2": "大型自動クラフターのセットアップが必要です",
  "extra_gauges.ponder.expanded_factory_recipes.text_3": "小型レシピでも§eUI§rから§9幅§rを広げれば大型自動クラフターに対応できます",
  "extra_gauges.ponder.expanded_factory_recipes.text_4": "高さが足りなくても、レシピの最低条件を満たせば問題ありません!",

  "create.logistics.int_selection": "整数値を選択",
  "extra_gauges.gui.factory_panel.crafting_input_tip_1": "メカニカルクラフター (幅%sブロック)",
  "extra_gauges.gui.factory_panel.crafting_input_tip_2": "最小高さ: %sブロック",
  "extra_gauges.gui.factory_panel.auto_crafting_input": "レシピが大きすぎて表示できません",
  "extra_gauges.gui.factory_panel.extend_width": "幅を広げる (%s)",
  "extra_gauges.gui.factory_panel.reduce_width": "幅を縮める (%s)",
  "extra_gauges.gui.passive_panel.no_recipe": "レシピがありません",

  "extra_gauges.gui.string_panel.join": "結合:",
  "extra_gauges.gui.string_panel.regex": "正規表現:",
  "extra_gauges.gui.string_panel.replacement": "置換:"
}